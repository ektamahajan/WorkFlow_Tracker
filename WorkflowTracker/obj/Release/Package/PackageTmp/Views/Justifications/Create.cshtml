@model WorkflowTracker.Models.Justification

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Justification</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.PrevStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PrevStatus, new { htmlAttributes = new { @class = "form-control", @Value = @ViewBag.pre, disabled = "disabled", @readonly = "readonly" } })
             @*   @Html.EditorFor(model => model.PrevStatus, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.PrevStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NewStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("NewStatus", new List<SelectListItem>
           {
                new SelectListItem {Text = "Planned",Value= "Planned"},
                new SelectListItem {Text = "In Process ", Value="In Process"},
                new SelectListItem {Text = "Blocked", Value="Blocked"},
                new SelectListItem {Text = "Completed ", Value="Completed"}
           })
               
                
                @* @Html.EditorFor(model => model.NewStatus, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.NewStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserID, "UserID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserID, new { htmlAttributes = new { @class = "form-control", @Value = @ViewBag.UserID, disabled = "disabled", @readonly = "readonly" } })
              @*  @Html.DropDownList("UserID", null, htmlAttributes: new { @class = "form-control"})*@
                @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.StepID, "StepID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StepID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StepID, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.JustificationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.JustificationDate, new { htmlAttributes = new { @class = "form-control", @Value = @DateTime.Now.Date, disabled = "disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.JustificationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.JustificationText, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.JustificationText, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.JustificationText, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
